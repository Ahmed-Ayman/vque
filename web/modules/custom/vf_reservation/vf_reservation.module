<?php

use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implementing hook_theme().
 */
function vf_reservation_theme($existing, $type, $theme, $path)
{
  return [
    'reservation' => [
      'render element' => 'content',
      'variables' => [
        'user_mobile' => null,
      ],
    ],
    'suggestions' => [
      'render element' => 'content',
      'variables' => [
        'data' => null,
      ],
    ],
    'stores' => [
      'render element' => 'content',
      'variables' => [
        'data' => null,
      ],
    ],
  ];
}

/**
 * Implementing hook_page_attachments_alter().
 */
function vf_reservation_page_attachments_alter(&$page)
{
  $route_name = \Drupal::routeMatch()->getRouteName();
  if ($route_name === "vf_reservation.home") {
    $page['#attached']['library'][] = 'vf_reservation/vf_reservation';
  }
}

function vf_reservation_preprocess_views_view_field(&$vars)
{
  if (isset($vars['view']) && ($vars['view']->id() == 'stores')) {
    if ($vars['field']->field == 'nothing') {
      $number = \Drupal::request()->request->get('mobile');
//      dump(\Drupal::request()->request);
      $problem = \Drupal::request()->request->get('problem');
      if ($number && $problem){
        $out = $vars['output']->__toString();
        $out = str_replace('/reserve', "/reserve?mn=" . $number . "&" . "prob=" . $problem, $out);
        $vars['output'] = (new \Drupal\Core\Render\Markup())->create($out);
      }
    }
  }
}
